plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'java'
	id 'com.palantir.docker' version '0.22.1'
}

apply plugin: 'io.spring.dependency-management'

group = 'org.codekaizen.demos'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude module: 'spring-boot-starter-tomcat'
		exclude group: 'junit', module: 'junit'
	}
}

repositories {
	mavenCentral()
}

ext {
	springCloudVersion = 'Greenwich.SR1'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jetty'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'com.rometools:rome:1.12.0'
	implementation 'com.thedeanda:lorem:2.1'
	implementation 'org.apache.commons:commons-math3:3.6.1'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.junit.jupiter:junit-jupiter-api"
	testImplementation "org.junit.jupiter:junit-jupiter-params"
	testImplementation "org.junit.jupiter:junit-jupiter-engine"
	testImplementation "org.mockito:mockito-core"
	testImplementation "org.mockito:mockito-junit-jupiter"
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

docker {
	name "kbrockhoff/${project.name}:${project.version}"
	tag 'Latest', "kbrockhoff/${project.name}:latest"
	files tasks.bootJar.outputs
    buildArgs(['JAR_FILE': "${project.name}-${project.version}.jar"])
}
